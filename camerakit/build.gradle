plugins {
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.dcendents.android-maven' version '1.5'
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildToolsVersion '27.0.3'

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // `compile` and `implementation` behave slightly differently.
    // Since we allow the end-developer to use classes from JpegKit,
    // the package cannot be added using `implementation` for now.
    compile 'com.camerakit:jpegkit:0.1.0'

    implementation 'com.android.support:support-annotations:27.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
}

ext.getBintrayUser = { ->
    if (System.getenv('BINTRAY_USER')) {
        return System.getenv('BINTRAY_USER')
    }

    if (rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())
        return properties.getProperty('bintray.user')
    }
}

ext.getBintrayKey = { ->
    if (System.getenv('BINTRAY_KEY')) {
        return System.getenv('BINTRAY_KEY')
    }

    if (rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())
        return properties.getProperty('bintray.key')
    }
}

task cleanDeployment {
    doLast {
        logger.lifecycle('CameraKit Deployment: Cleaning...')
        logger.lifecycle('Deleting: ' + project.buildDir)
        delete project.buildDir
    }
}

task buildDeployment {
    shouldRunAfter(cleanDeployment)
    finalizedBy assemble

    doFirst {
        android.variantFilter { variant ->
            if (variant.buildType.name == 'debug') {
                variant.setIgnore(true)
            }
        }
    }
}

task deploySnapshot {
    shouldRunAfter(buildDeployment)

    dependsOn cleanDeployment
    dependsOn buildDeployment
    finalizedBy bintrayUpload

    doLast {
        version = version + '-Snapshot'
        bintrayUpload.setVersionName(bintrayUpload.getVersionName() + '-Snapshot')
        bintrayUpload.setUserOrg('camerakit')
        bintrayUpload.setRepoName('camerakit-android-snapshots')
        bintrayUpload.setOverride(true)
        bintrayUpload.setPublish(true)

        logger.lifecycle('Deploying version ' + bintrayUpload.getVersionName() + ' in ' + bintrayUpload.getRepoName())
    }
}

task deployRelease {
    shouldRunAfter(buildDeployment)

    dependsOn cleanDeployment
    dependsOn buildDeployment
    finalizedBy bintrayUpload

    doLast {
        bintrayUpload.setUserOrg('camerakit')
        bintrayUpload.setRepoName('camerakit-android')

        logger.lifecycle('Deploying version ' + bintrayUpload.getVersionName() + ' in ' + bintrayUpload.getRepoName())
    }
}

group = 'com.camerakit'
version = '1.0.0-beta1'

install {
    repositories.mavenInstaller {
        pom.project {
            name 'camerakit-android'
            groupId 'com.camerakit'
            artifactId 'camerakit'
            packaging 'aar'
        }
    }
}

bintray {
    user = getBintrayUser()
    key = getBintrayKey()
    configurations = ['archives']
    pkg {
        name = 'camerakit-android'
        vcsUrl = 'https://github.com/CameraKit/camerakit-android.git'
        licenses = ['MIT']
        version {
            name = project.version
            released = new Date()
        }
    }
}
